name: Build Environment and Deploy Application

on:
  push:
    branches:
      - master

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials from GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install awscli

      - name: Download Terraform state file from S3
        run: aws s3 cp s3://${{ secrets.S3_TF_STATE_BUCKET_NAME }}/${{ secrets.S3_TF_STATE_KEY }} ./terraform/terraform.tfstate

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Upload Terraform state file to S3
        run: aws s3 cp ./terraform/terraform.tfstate s3://${{ secrets.S3_TF_STATE_BUCKET_NAME }}/${{ secrets.S3_TF_STATE_KEY }}

#  build:
#    needs: upload-tf-state-file
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Java environment
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#
#      - name: Cache Maven packages
#        uses: actions/cache@v3
#        with:
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          path: ~/.m2
#
#      - name: Build JAR file
#        run: mvn package
#
#      - name: Upload JAR file to AWS S3
#        uses: aws-actions/upload-artifact-to-s3@v2
#        with:
#          aws-region: ${{ secrets.AWS_REGION }}
#          bucket-name: gym-api-app-artifact-bucket
#          path: target/*.jar
#          object-key: gym-api/${{ github.sha }}.jar
#          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Download JAR file from S3
#        uses: actions/download-artifact@v2
#        with:
#          aws-region: ${{ secrets.AWS_REGION }}
#          bucket-name: gym-api-app-artifact-bucket
#          path: target/*.jar
#          object-key: gym-api/${{ github.sha }}.jar
#          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
